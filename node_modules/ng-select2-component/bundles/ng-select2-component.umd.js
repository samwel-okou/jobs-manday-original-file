(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/overlay'), require('@angular/cdk/scrolling'), require('@angular/core'), require('@angular/forms'), require('rxjs'), require('@angular/common'), require('ngx-infinite-scroll')) :
    typeof define === 'function' && define.amd ? define('ng-select2-component', ['exports', '@angular/cdk/overlay', '@angular/cdk/scrolling', '@angular/core', '@angular/forms', 'rxjs', '@angular/common', 'ngx-infinite-scroll'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng-select2-component'] = {}, global.ng.cdk.overlay, global.ng.cdk.scrolling, global.ng.core, global.ng.forms, global.rxjs, global.ng.common, global.ngxInfiniteScroll));
}(this, (function (exports, overlay, scrolling, core, forms, rxjs, common, ngxInfiniteScroll) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/select2-const.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var timeout = 200;
    /** @type {?} */
    var unicodePatterns = [
        { l: 'a', s: /[ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/gi },
        { l: 'aa', s: /ꜳ/gi },
        { l: 'ae', s: /[æǽǣ]/gi },
        { l: 'ao', s: /ꜵ/gi },
        { l: 'au', s: /ꜷ/gi },
        { l: 'av', s: /[ꜹꜻ]/gi },
        { l: 'ay', s: /ꜽ/gi },
        { l: 'b', s: /[ⓑｂḃḅḇƀƃɓ]/gi },
        { l: 'c', s: /[ⓒｃćĉċčçḉƈȼꜿↄ]/gi },
        { l: 'd', s: /[ⓓｄḋďḍḑḓḏđƌɖɗꝺ]/gi },
        { l: 'dz', s: /[ǳǆ]/gi },
        { l: 'e', s: /[ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/gi },
        { l: 'f', s: /[ⓕｆḟƒꝼ]/gi },
        { l: 'g', s: /[ⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/gi },
        { l: 'h', s: /[ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/gi },
        { l: 'hv', s: /ƕ/gi },
        { l: 'i', s: /[ⓘｉìíîĩīĭİïḯỉǐȉȋịįḭɨı]/gi },
        { l: 'j', s: /[ⓙｊĵǰɉ]/gi },
        { l: 'k', s: /[ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/gi },
        { l: 'l', s: /[ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇꝆ]/gi },
        { l: 'lj', s: /ǉ/gi },
        { l: 'm', s: /[ⓜｍḿṁṃɱɯ]/gi },
        { l: 'n', s: /[ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/gi },
        { l: 'nj', s: /ǌ/gi },
        { l: 'o', s: /[ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔƟꝋꝍɵ]/gi },
        { l: 'oi', s: /ƣ/gi },
        { l: 'oe', s: /œ/gi },
        { l: 'oo', s: /ꝏ/gi },
        { l: 'ou', s: /ȣ/gi },
        { l: 'p', s: /[ⓟｐṕṗƥᵽꝑꝓꝕ]/gi },
        { l: 'q', s: /[ⓠｑɋꝗꝙ]/gi },
        { l: 'r', s: /[ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/gi },
        { l: 's', s: /[ⓢｓßẞśṥŝṡšṧṣṩșşȿꞩꞅẛ]/gi },
        { l: 't', s: /[ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/gi },
        { l: 'tz', s: /ꜩ/gi },
        { l: 'u', s: /[ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/gi },
        { l: 'v', s: /[ⓥｖṽṿʋꝟʌ]/gi },
        { l: 'vy', s: /ꝡ/gi },
        { l: 'w', s: /[ⓦｗẁẃŵẇẅẘẉⱳ]/gi },
        { l: 'x', s: /[ⓧｘẋẍ]/gi },
        { l: 'y', s: /[ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/gi },
        { l: 'z', s: /[ⓩｚźẑżžẓẕƶȥɀⱬꝣ]/gi },
    ];
    /** @type {?} */
    var defaultMinCountForSearch = 6;
    /** @type {?} */
    var protectRegexp = new RegExp('[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]', 'g');

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var Select2Utils = /** @class */ (function () {
        function Select2Utils() {
        }
        /**
         * @param {?} data
         * @param {?} value
         * @return {?}
         */
        Select2Utils.getOptionByValue = function (data, value) {
            var e_1, _a, e_2, _b;
            if (Array.isArray(data)) {
                try {
                    for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                        var groupOrOption = data_1_1.value;
                        /** @type {?} */
                        var options = (( /** @type {?} */(groupOrOption))).options;
                        if (options) {
                            try {
                                for (var options_1 = (e_2 = void 0, __values(options)), options_1_1 = options_1.next(); !options_1_1.done; options_1_1 = options_1.next()) {
                                    var option = options_1_1.value;
                                    if (option.value === value) {
                                        return option;
                                    }
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (options_1_1 && !options_1_1.done && (_b = options_1.return)) _b.call(options_1);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                        }
                        else {
                            if ((( /** @type {?} */(groupOrOption))).value === value) {
                                return ( /** @type {?} */(groupOrOption));
                            }
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            return null;
        };
        /**
         * @param {?} data
         * @param {?} value
         * @param {?} multiple
         * @return {?}
         */
        Select2Utils.getOptionsByValue = function (data, value, multiple) {
            var e_3, _a;
            if (multiple) {
                /** @type {?} */
                var values = Array.isArray(value) ? value : [];
                /** @type {?} */
                var result = [];
                try {
                    for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {
                        var v = values_1_1.value;
                        /** @type {?} */
                        var option = Select2Utils.getOptionByValue(data, v);
                        if (option) {
                            result.push(option);
                        }
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                return result;
            }
            return Select2Utils.getOptionByValue(data, ( /** @type {?} */(value)));
        };
        /**
         * @param {?} data
         * @return {?}
         */
        Select2Utils.getFirstAvailableOption = function (data) {
            var e_4, _a, e_5, _b;
            if (Array.isArray(data)) {
                try {
                    for (var data_2 = __values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {
                        var groupOrOption = data_2_1.value;
                        /** @type {?} */
                        var options = (( /** @type {?} */(groupOrOption))).options;
                        if (options) {
                            try {
                                for (var options_2 = (e_5 = void 0, __values(options)), options_2_1 = options_2.next(); !options_2_1.done; options_2_1 = options_2.next()) {
                                    var option = options_2_1.value;
                                    if (!option.disabled) {
                                        return option.value;
                                    }
                                }
                            }
                            catch (e_5_1) { e_5 = { error: e_5_1 }; }
                            finally {
                                try {
                                    if (options_2_1 && !options_2_1.done && (_b = options_2.return)) _b.call(options_2);
                                }
                                finally { if (e_5) throw e_5.error; }
                            }
                        }
                        else {
                            /** @type {?} */
                            var option = ( /** @type {?} */(groupOrOption));
                            if (!option.disabled) {
                                return option.value;
                            }
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
            return null;
        };
        /**
         * @private
         * @param {?} data
         * @return {?}
         */
        Select2Utils.getOptionsCount = function (data) {
            var e_6, _a;
            /** @type {?} */
            var count = 0;
            if (Array.isArray(data)) {
                try {
                    for (var data_3 = __values(data), data_3_1 = data_3.next(); !data_3_1.done; data_3_1 = data_3.next()) {
                        var groupOrOption = data_3_1.value;
                        /** @type {?} */
                        var options = (( /** @type {?} */(groupOrOption))).options;
                        if (options) {
                            count += options.length;
                        }
                        else {
                            count++;
                        }
                    }
                }
                catch (e_6_1) { e_6 = { error: e_6_1 }; }
                finally {
                    try {
                        if (data_3_1 && !data_3_1.done && (_a = data_3.return)) _a.call(data_3);
                    }
                    finally { if (e_6) throw e_6.error; }
                }
            }
            return count;
        };
        /**
         * @param {?} filteredData
         * @param {?} value
         * @return {?}
         */
        Select2Utils.valueIsNotInFilteredData = function (filteredData, value) {
            var e_7, _a, e_8, _b;
            if (Select2Utils.isNullOrUndefined(value)) {
                return true;
            }
            try {
                for (var filteredData_1 = __values(filteredData), filteredData_1_1 = filteredData_1.next(); !filteredData_1_1.done; filteredData_1_1 = filteredData_1.next()) {
                    var groupOrOption = filteredData_1_1.value;
                    /** @type {?} */
                    var options = (( /** @type {?} */(groupOrOption))).options;
                    if (options) {
                        try {
                            for (var options_3 = (e_8 = void 0, __values(options)), options_3_1 = options_3.next(); !options_3_1.done; options_3_1 = options_3.next()) {
                                var option = options_3_1.value;
                                if (option.value === value) {
                                    return false;
                                }
                            }
                        }
                        catch (e_8_1) { e_8 = { error: e_8_1 }; }
                        finally {
                            try {
                                if (options_3_1 && !options_3_1.done && (_b = options_3.return)) _b.call(options_3);
                            }
                            finally { if (e_8) throw e_8.error; }
                        }
                    }
                    else {
                        if ((( /** @type {?} */(groupOrOption))).value === value) {
                            return false;
                        }
                    }
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (filteredData_1_1 && !filteredData_1_1.done && (_a = filteredData_1.return)) _a.call(filteredData_1);
                }
                finally { if (e_7) throw e_7.error; }
            }
            return true;
        };
        // tslint:disable-next-line:cognitive-complexity
        /**
         * @param {?} filteredData
         * @param {?} hoveringValue
         * @return {?}
         */
        Select2Utils.getPreviousOption = function (filteredData, hoveringValue) {
            /** @type {?} */
            var findIt = Select2Utils.isNullOrUndefined(hoveringValue);
            for (var i = filteredData.length - 1; i >= 0; i--) {
                /** @type {?} */
                var groupOrOption = filteredData[i];
                /** @type {?} */
                var options = (( /** @type {?} */(groupOrOption))).options;
                if (options) {
                    for (var j = options.length - 1; j >= 0; j--) {
                        /** @type {?} */
                        var option = options[j];
                        if (findIt) {
                            if (!option.disabled && !option.hide) {
                                return option;
                            }
                        }
                        if (!findIt) {
                            findIt = option.value === hoveringValue;
                        }
                    }
                }
                else {
                    /** @type {?} */
                    var option = ( /** @type {?} */(groupOrOption));
                    if (findIt) {
                        if (!option.disabled && !option.hide) {
                            return option;
                        }
                    }
                    if (!findIt) {
                        findIt = option.value === hoveringValue;
                    }
                }
            }
            return null;
        };
        // tslint:disable-next-line:cognitive-complexity
        /**
         * @param {?} filteredData
         * @param {?} hoveringValue
         * @return {?}
         */
        Select2Utils.getNextOption = function (filteredData, hoveringValue) {
            var e_9, _a, e_10, _b;
            /** @type {?} */
            var findIt = Select2Utils.isNullOrUndefined(hoveringValue);
            try {
                for (var filteredData_2 = __values(filteredData), filteredData_2_1 = filteredData_2.next(); !filteredData_2_1.done; filteredData_2_1 = filteredData_2.next()) {
                    var groupOrOption = filteredData_2_1.value;
                    /** @type {?} */
                    var options = (( /** @type {?} */(groupOrOption))).options;
                    if (options) {
                        try {
                            for (var options_4 = (e_10 = void 0, __values(options)), options_4_1 = options_4.next(); !options_4_1.done; options_4_1 = options_4.next()) {
                                var option = options_4_1.value;
                                if (findIt) {
                                    if (!option.disabled && !option.hide) {
                                        return option;
                                    }
                                }
                                else if (!findIt) {
                                    findIt = option.value === hoveringValue;
                                }
                            }
                        }
                        catch (e_10_1) { e_10 = { error: e_10_1 }; }
                        finally {
                            try {
                                if (options_4_1 && !options_4_1.done && (_b = options_4.return)) _b.call(options_4);
                            }
                            finally { if (e_10) throw e_10.error; }
                        }
                    }
                    else {
                        /** @type {?} */
                        var option = ( /** @type {?} */(groupOrOption));
                        if (findIt) {
                            if (!option.disabled && !option.hide) {
                                return option;
                            }
                        }
                        else if (!findIt) {
                            findIt = option.value === hoveringValue;
                        }
                    }
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (filteredData_2_1 && !filteredData_2_1.done && (_a = filteredData_2.return)) _a.call(filteredData_2);
                }
                finally { if (e_9) throw e_9.error; }
            }
            return null;
        };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        Select2Utils.isNullOrUndefined = function (value) {
            return value === null || value === undefined;
        };
        /**
         * @private
         * @param {?} label
         * @param {?} searchText
         * @param {?} editPattern
         * @return {?}
         */
        Select2Utils.containSearchText = function (label, searchText, editPattern) {
            return searchText
                ? Select2Utils.formatSansUnicode(label).match(new RegExp(Select2Utils.formatPattern(searchText, editPattern), 'i')) !== null
                : true;
        };
        /**
         * @private
         * @param {?} str
         * @return {?}
         */
        Select2Utils.protectPattern = function (str) {
            return str.replace(protectRegexp, '\\$&');
        };
        /**
         * @private
         * @param {?} str
         * @return {?}
         */
        Select2Utils.formatSansUnicode = function (str) {
            var e_11, _a;
            try {
                for (var unicodePatterns_1 = __values(unicodePatterns), unicodePatterns_1_1 = unicodePatterns_1.next(); !unicodePatterns_1_1.done; unicodePatterns_1_1 = unicodePatterns_1.next()) {
                    var unicodePattern = unicodePatterns_1_1.value;
                    str = str.replace(unicodePattern.s, unicodePattern.l);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (unicodePatterns_1_1 && !unicodePatterns_1_1.done && (_a = unicodePatterns_1.return)) _a.call(unicodePatterns_1);
                }
                finally { if (e_11) throw e_11.error; }
            }
            return str;
        };
        /**
         * @private
         * @param {?} str
         * @param {?} editPattern
         * @return {?}
         */
        Select2Utils.formatPattern = function (str, editPattern) {
            str = Select2Utils.formatSansUnicode(Select2Utils.protectPattern(str));
            if (editPattern && typeof editPattern === 'function') {
                str = editPattern(str);
            }
            return str;
        };
        /**
         * @param {?} data
         * @param {?} searchText
         * @param {?=} editPattern
         * @return {?}
         */
        Select2Utils.getFilteredData = function (data, searchText, editPattern) {
            var e_12, _a;
            if (searchText) {
                /** @type {?} */
                var result = [];
                try {
                    for (var data_4 = __values(data), data_4_1 = data_4.next(); !data_4_1.done; data_4_1 = data_4.next()) {
                        var groupOrOption = data_4_1.value;
                        /** @type {?} */
                        var options = (( /** @type {?} */(groupOrOption))).options;
                        if (options) {
                            if (options.some(( /**
                             * @param {?} group
                             * @return {?}
                             */function (/**
                             * @param {?} group
                             * @return {?}
                             */ group) { return Select2Utils.containSearchText(group.label, searchText, editPattern); }))) {
                                /** @type {?} */
                                var filteredOptions = options.filter(( /**
                                 * @param {?} group
                                 * @return {?}
                                 */function (/**
                                 * @param {?} group
                                 * @return {?}
                                 */ group) { return Select2Utils.containSearchText(group.label, searchText, editPattern); }));
                                result.push({
                                    label: groupOrOption.label,
                                    options: filteredOptions,
                                });
                            }
                        }
                        else if (Select2Utils.containSearchText(groupOrOption.label, searchText, editPattern)) {
                            result.push(groupOrOption);
                        }
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (data_4_1 && !data_4_1.done && (_a = data_4.return)) _a.call(data_4);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
                return result;
            }
            else {
                return data;
            }
        };
        /**
         * @param {?} data
         * @param {?} selectedOptions
         * @return {?}
         */
        Select2Utils.getFilteredSelectedData = function (data, selectedOptions) {
            var e_13, _a;
            /** @type {?} */
            var result = [];
            try {
                for (var data_5 = __values(data), data_5_1 = data_5.next(); !data_5_1.done; data_5_1 = data_5.next()) {
                    var groupOrOption = data_5_1.value;
                    /** @type {?} */
                    var options = (( /** @type {?} */(groupOrOption))).options;
                    if (options) {
                        /** @type {?} */
                        var filteredOptions = options.filter(( /**
                         * @param {?} group
                         * @return {?}
                         */function (/**
                         * @param {?} group
                         * @return {?}
                         */ group) { return Select2Utils.isSelected(selectedOptions, group, true) === 'false'; }));
                        if (filteredOptions.length) {
                            result.push({
                                label: groupOrOption.label,
                                options: filteredOptions,
                            });
                        }
                    }
                    else if (Select2Utils.isSelected(selectedOptions, ( /** @type {?} */(groupOrOption)), true) === 'false') {
                        result.push(groupOrOption);
                    }
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (data_5_1 && !data_5_1.done && (_a = data_5.return)) _a.call(data_5);
                }
                finally { if (e_13) throw e_13.error; }
            }
            return result;
        };
        /**
         * @param {?} data
         * @param {?=} minCountForSearch
         * @return {?}
         */
        Select2Utils.isSearchboxHiddex = function (data, minCountForSearch) {
            if (minCountForSearch === '' ||
                minCountForSearch === undefined ||
                minCountForSearch === null ||
                isNaN(+minCountForSearch)) {
                minCountForSearch = defaultMinCountForSearch;
            }
            /** @type {?} */
            var optionCount = Select2Utils.getOptionsCount(data);
            return optionCount < +minCountForSearch;
        };
        /**
         * @param {?} options
         * @param {?} option
         * @param {?} multiple
         * @return {?}
         */
        Select2Utils.isSelected = function (options, option, multiple) {
            return multiple
                ? options && (( /** @type {?} */(options))).some(( /**
                 * @param {?} op
                 * @return {?}
                 */function (/**
                 * @param {?} op
                 * @return {?}
                 */ op) { return op.value === option.value; }))
                    ? 'true'
                    : 'false'
                : options && option.value === (( /** @type {?} */(options))).value
                    ? 'true'
                    : 'false';
        };
        /**
         * @param {?} options
         * @param {?} option
         * @return {?}
         */
        Select2Utils.removeSelection = function (options, option) {
            for (var i = 0; i < (( /** @type {?} */(options))).length; i++) {
                if ((( /** @type {?} */(options)))[i].value === option.value) {
                    (( /** @type {?} */(options))).splice(i, 1);
                    return;
                }
            }
        };
        return Select2Utils;
    }());

    /** @type {?} */
    var nextUniqueId = 0;
    /** @type {?} */
    var displaySearchStatusList = ['default', 'hidden', 'always'];
    var Select2 = /** @class */ (function () {
        /**
         * @param {?} _viewportRuler
         * @param {?} _changeDetectorRef
         * @param {?} _parentForm
         * @param {?} _parentFormGroup
         * @param {?} _control
         * @param {?} tabIndex
         */
        function Select2(_viewportRuler, _changeDetectorRef, _parentForm, _parentFormGroup, _control, tabIndex) {
            this._viewportRuler = _viewportRuler;
            this._changeDetectorRef = _changeDetectorRef;
            this._parentForm = _parentForm;
            this._parentFormGroup = _parentFormGroup;
            this._control = _control;
            this.minCharForSearch = 0;
            this.limitSelection = 0;
            this.listPosition = 'below';
            /**
             * use the material style
             */
            this.styleMode = 'default';
            /**
             * infinite scroll distance
             */
            this.infiniteScrollDistance = 1.5;
            /**
             * infinite scroll distance
             */
            this.infiniteScrollThrottle = 150;
            /**
             * the max height of the results container when opening the select
             */
            this.resultMaxHeight = '200px';
            this.update = new core.EventEmitter();
            this.open = new core.EventEmitter();
            this.close = new core.EventEmitter();
            this.focus = new core.EventEmitter();
            this.blur = new core.EventEmitter();
            this.search = new core.EventEmitter();
            this.scroll = new core.EventEmitter();
            this.removeOption = new core.EventEmitter();
            this.option = null;
            this.isOpen = false;
            /**
             * Whether the element is focused or not.
             */
            this.focused = false;
            this.hoveringValue = null;
            this.innerSearchText = '';
            this._stateChanges = new rxjs.Subject();
            this._disabled = false;
            this._required = false;
            this._readonly = false;
            this._multiple = false;
            this._overlay = false;
            this._resettable = false;
            this._hideSelectedItems = false;
            this._clickDetection = false;
            this._uid = "select2-" + nextUniqueId++;
            this._infiniteScroll = true;
            /**
             * View -> model callback called when select has been touched
             */
            this._onTouched = ( /**
             * @return {?}
             */function () {
                // do nothing
            });
            /**
             * View -> model callback called when value changes
             */
            this._onChange = ( /**
             * @return {?}
             */function () {
                // do nothing
            });
            this.id = this.id;
            this._tabIndex = parseInt(tabIndex, 10) || 0;
            if (this._control) {
                this._control.valueAccessor = this;
            }
            this._clickDetectionFc = this.clickDetection.bind(this);
        }
        Object.defineProperty(Select2.prototype, "multiple", {
            /**
             * @return {?}
             */
            get: function () {
                return this._multiple;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._multiple = this._coerceBooleanProperty(value);
                this.ngOnInit();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "overlay", {
            /**
             * use the material style
             * @return {?}
             */
            get: function () {
                return this._overlay;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._overlay = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "infiniteScroll", {
            /**
             * infinite scroll activated
             * @return {?}
             */
            get: function () {
                return this._infiniteScroll;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._infiniteScroll = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "select2Options", {
            /**
             * @return {?}
             */
            get: function () {
                return this.multiple ? (( /** @type {?} */(this.option))) : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "select2Option", {
            /**
             * @return {?}
             */
            get: function () {
                return this.multiple ? null : (( /** @type {?} */(this.option)));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "searchText", {
            /**
             * @return {?}
             */
            get: function () {
                return this.innerSearchText;
            },
            /**
             * @param {?} text
             * @return {?}
             */
            set: function (text) {
                if (this.customSearchEnabled) {
                    this.search.emit({
                        component: this,
                        value: this._value,
                        search: text,
                    });
                }
                this.innerSearchText = text;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "minCountForSearch", {
            /**
             * minimal data of show the search field
             * @return {?}
             */
            get: function () {
                return this._minCountForSearch;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._minCountForSearch = value;
                this.updateSearchBox();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "id", {
            /**
             * Unique id of the element.
             * @return {?}
             */
            get: function () {
                return this._id;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._id = value || this._uid;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "required", {
            /**
             * Whether the element is required.
             * @return {?}
             */
            get: function () {
                return this._required;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._required = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "disabled", {
            /**
             * Whether selected items should be hidden.
             * @return {?}
             */
            get: function () {
                return this._control ? this._control.disabled : this._disabled;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._disabled = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "hideSelectedItems", {
            /**
             * Whether items are hidden when has.
             * @return {?}
             */
            get: function () {
                return this._hideSelectedItems;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._hideSelectedItems = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "readonly", {
            /**
             * Whether the element is readonly.
             * @return {?}
             */
            get: function () {
                return this._readonly;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._readonly = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "value", {
            /**
             * The input element's value.
             * @return {?}
             */
            get: function () {
                return this._value;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                var _this = this;
                if (this.testValueChange(this._value, value)) {
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        _this._value = value;
                        _this.writeValue(value);
                    }), 10);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "tabIndex", {
            /**
             * Tab index for the select2 element.
             * @return {?}
             */
            get: function () {
                return this.disabled ? -1 : this._tabIndex;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                if (typeof value !== 'undefined') {
                    this._tabIndex = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "resettable", {
            /**
             * reset with no selected value
             * @return {?}
             */
            get: function () {
                return this._resettable;
            },
            /**
             * @param {?} value
             * @return {?}
             */
            set: function (value) {
                this._resettable = this._coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "ariaInvalid", {
            /**
             * @return {?}
             */
            get: function () {
                return this._isErrorState();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "classMaterial", {
            /**
             * @return {?}
             */
            get: function () {
                return this.styleMode === 'material';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "classNostyle", {
            /**
             * @return {?}
             */
            get: function () {
                return this.styleMode === 'noStyle';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "select2above", {
            /**
             * @return {?}
             */
            get: function () {
                return !this.overlay ? this.listPosition === 'above' : this._isAbobeOverlay();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "_positions", {
            /**
             * @return {?}
             */
            get: function () {
                if (this.listPosition === 'auto') {
                    [
                        {
                            originX: 'start',
                            originY: 'bottom',
                            overlayX: 'start',
                            overlayY: 'bottom',
                        },
                        {
                            originX: 'start',
                            originY: 'top',
                            overlayX: 'start',
                            overlayY: 'top',
                        },
                    ];
                }
                else {
                    return null;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Select2.prototype, "resultsElement", {
            /**
             * @private
             * @return {?}
             */
            get: function () {
                var _a;
                return (_a = this.resultContainer) === null || _a === void 0 ? void 0 : _a.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @return {?}
         */
        Select2.prototype.ngOnInit = function () {
            var _this = this;
            this._viewportRuler.change(100).subscribe(( /**
             * @return {?}
             */function () {
                if (_this.isOpen) {
                    _this.triggerRect();
                }
            }));
            /** @type {?} */
            var option = Select2Utils.getOptionsByValue(this.data, this._control ? this._control.value : this.value, this.multiple);
            if (option !== null) {
                this.option = option;
            }
            if (!Array.isArray(option)) {
                this.hoveringValue = ( /** @type {?} */(this.value));
            }
            this.updateSearchBox();
        };
        /**
         * @return {?}
         */
        Select2.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.cdkConnectedOverlay.positionChange.subscribe(( /**
             * @param {?} posChange
             * @return {?}
             */function (posChange) {
                var _a;
                if (_this.listPosition === 'auto' && ((_a = posChange.connectionPair) === null || _a === void 0 ? void 0 : _a.originY) &&
                    _this._overlayPosition !== posChange.connectionPair.originY) {
                    _this.triggerRect();
                    _this._overlayPosition = posChange.connectionPair.originY;
                    _this._changeDetectorRef.detectChanges();
                }
            }));
            this.selectionElement = this.selection.nativeElement;
            this.triggerRect();
        };
        /**
         * @return {?}
         */
        Select2.prototype.ngDoCheck = function () {
            var _a;
            this.updateSearchBox();
            this._dirtyCheckNativeValue();
            if (this._triggerRect) {
                if (this.overlayWidth !== this._triggerRect.width) {
                    this.overlayWidth = this._triggerRect.width;
                }
                if (((_a = this._dropdownRect) === null || _a === void 0 ? void 0 : _a.height) > 0 && this.overlayHeight !== this._dropdownRect.height) {
                    this.overlayHeight = this.listPosition === 'auto' ? this._dropdownRect.height : 0;
                }
            }
        };
        /**
         * @return {?}
         */
        Select2.prototype.ngOnDestroy = function () {
            window.document.body.removeEventListener('click', this._clickDetectionFc);
        };
        /**
         * @return {?}
         */
        Select2.prototype.updateSearchBox = function () {
            /** @type {?} */
            var hidden = this.customSearchEnabled
                ? false
                : Select2Utils.isSearchboxHiddex(this.data, this._minCountForSearch);
            if (this.isSearchboxHidden !== hidden) {
                this.isSearchboxHidden = hidden;
            }
        };
        /**
         * @return {?}
         */
        Select2.prototype.hideSearch = function () {
            /** @type {?} */
            var displaySearchStatus = displaySearchStatusList.indexOf(this.displaySearchStatus) > -1 ? this.displaySearchStatus : 'default';
            return (displaySearchStatus === 'default' && this.isSearchboxHidden) || displaySearchStatus === 'hidden';
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.getOptionStyle = function (option) {
            return ('select2-results__option ' +
                (option.hide ? 'select2-results__option--hide ' : '') +
                (option.value === this.hoveringValue ? 'select2-results__option--highlighted ' : '') +
                (option.classes || ''));
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.mouseenter = function (option) {
            if (!option.disabled) {
                this.hoveringValue = option.value;
            }
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.click = function (option) {
            if (this.testSelection(option)) {
                this.select(option);
            }
        };
        /**
         * @param {?} e
         * @return {?}
         */
        Select2.prototype.reset = function (e) {
            this.select(null);
            e.preventDefault();
            e.stopPropagation();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        Select2.prototype.prevChange = function (event) {
            event.stopPropagation();
        };
        /**
         * @return {?}
         */
        Select2.prototype.toggleOpenAndClose = function () {
            var _this = this;
            if (this.disabled) {
                return;
            }
            this._focus(true);
            this.isOpen = !this.isOpen;
            if (this.isOpen) {
                this.innerSearchText = '';
                this.updateFilteredData();
                this._focusSearchboxOrResultsElement();
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    if (_this.option) {
                        /** @type {?} */
                        var option = _this.option instanceof Array ? _this.option[0] : _this.option;
                        _this.updateScrollFromOption(option);
                    }
                    else if (_this.resultsElement) {
                        _this.resultsElement.scrollTop = 0;
                    }
                    setTimeout(( /**
                     * @return {?}
                     */function () {
                        var _a, _b;
                        _this.triggerRect();
                        (_b = (_a = _this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();
                    }), 100);
                }));
                this.open.emit(this);
            }
            else {
                this.close.emit(this);
            }
            if (this.isOpen && !this._clickDetection) {
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    window.document.body.addEventListener('click', _this._clickDetectionFc, false);
                    _this._clickDetection = true;
                }), timeout);
            }
            this._changeDetectorRef.markForCheck();
        };
        /**
         * @param {?} option
         * @param {?} defaut
         * @return {?}
         */
        Select2.prototype.hasTemplate = function (option, defaut) {
            var _a, _b;
            return (this.templates instanceof core.TemplateRef ||
                ((_a = this.templates) === null || _a === void 0 ? void 0 : _a[option.templateId]) instanceof core.TemplateRef ||
                ((_b = this.templates) === null || _b === void 0 ? void 0 : _b[defaut]) instanceof core.TemplateRef);
        };
        /**
         * @param {?} option
         * @param {?} defaut
         * @return {?}
         */
        Select2.prototype.getTemplate = function (option, defaut) {
            return this.hasTemplate(option, defaut)
                ? this.templates[option.templateId] || this.templates[defaut] || this.templates
                : undefined;
        };
        /**
         * @return {?}
         */
        Select2.prototype.triggerRect = function () {
            var _a;
            this._triggerRect = this.selectionElement.getBoundingClientRect();
            this._dropdownRect = ((_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.nativeElement) ? this.dropdown.nativeElement.getBoundingClientRect()
                : undefined;
        };
        /**
         * @private
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.testSelection = function (option) {
            if (option.disabled) {
                return false;
            }
            if (!this.multiple ||
                !this.limitSelection ||
                (Array.isArray(this._value) && this._value.length < this.limitSelection)) {
                return true;
            }
            return false;
        };
        /**
         * @private
         * @param {?} value1
         * @param {?} value2
         * @return {?}
         */
        Select2.prototype.testValueChange = function (value1, value2) {
            var e_1, _c;
            var _a, _b;
            if (((value1 === null || value1 === undefined) && (value2 === null || value2 === undefined)) ||
                value1 === value2) {
                return false;
            }
            if (this.multiple && ((_a = (( /** @type {?} */(value1)))) === null || _a === void 0 ? void 0 : _a.length) && ((_b = (( /** @type {?} */(value2)))) === null || _b === void 0 ? void 0 : _b.length) &&
                (( /** @type {?} */(value1))).length === (( /** @type {?} */(value2))).length) {
                try {
                    for (var _d = __values(( /** @type {?} */(value1))), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var e1 = _e.value;
                        /** @type {?} */
                        var test = (( /** @type {?} */(value2))).indexOf(e1) > -1;
                        if (!test) {
                            return true;
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_c = _d.return)) _c.call(_d);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return false;
            }
            return true;
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype.updateFilteredData = function () {
            var _this = this;
            setTimeout(( /**
             * @return {?}
             */function () {
                /** @type {?} */
                var result = _this.data;
                if (_this.multiple && _this.hideSelectedItems) {
                    result = Select2Utils.getFilteredSelectedData(result, _this.option);
                }
                if (!_this.customSearchEnabled && _this.searchText && _this.searchText.length >= +_this.minCharForSearch) {
                    result = Select2Utils.getFilteredData(result, _this.searchText, _this.editPattern);
                }
                if (Select2Utils.valueIsNotInFilteredData(result, _this.hoveringValue)) {
                    _this.hoveringValue = Select2Utils.getFirstAvailableOption(result);
                }
                _this.filteredData = result;
                _this._changeDetectorRef.markForCheck();
            }));
        };
        /**
         * @private
         * @param {?} e
         * @return {?}
         */
        Select2.prototype.clickDetection = function (e) {
            if (!this.ifParentContainsClass(( /** @type {?} */(e.target)), 'selection')) {
                if (this.isOpen && !this.ifParentContainsClass(( /** @type {?} */(e.target)), 'select2-dropdown')) {
                    this.toggleOpenAndClose();
                }
                if (!this.ifParentContainsId(( /** @type {?} */(e.target)), this._id)) {
                    this.clickExit();
                }
            }
            else if (this.isOpen && !this.ifParentContainsId(( /** @type {?} */(e.target)), this._id)) {
                this.toggleOpenAndClose();
                this.clickExit();
            }
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype.clickExit = function () {
            this._focus(false);
            window.document.body.removeEventListener('click', this._clickDetectionFc);
            this._clickDetection = false;
        };
        /**
         * @private
         * @param {?} element
         * @param {?} cssClass
         * @return {?}
         */
        Select2.prototype.ifParentContainsClass = function (element, cssClass) {
            return this.getParentElementByClass(element, cssClass) !== null;
        };
        /**
         * @private
         * @param {?} element
         * @param {?} id
         * @return {?}
         */
        Select2.prototype.ifParentContainsId = function (element, id) {
            return this.getParentElementById(element, id) !== null;
        };
        /**
         * @private
         * @param {?} element
         * @param {?} cssClass
         * @return {?}
         */
        Select2.prototype.getParentElementByClass = function (element, cssClass) {
            if (this.containClasses(element, cssClass.trim().split(/\s+/))) {
                return element;
            }
            return element.parentElement ? this.getParentElementByClass(element.parentElement, cssClass) : null;
        };
        /**
         * @private
         * @param {?} element
         * @param {?} id
         * @return {?}
         */
        Select2.prototype.getParentElementById = function (element, id) {
            if (element.id === id) {
                return element;
            }
            return element.parentElement ? this.getParentElementById(element.parentElement, id) : null;
        };
        /**
         * @private
         * @param {?} element
         * @param {?} cssClasses
         * @return {?}
         */
        Select2.prototype.containClasses = function (element, cssClasses) {
            var e_2, _c;
            if (!element.classList) {
                return false;
            }
            try {
                for (var cssClasses_1 = __values(cssClasses), cssClasses_1_1 = cssClasses_1.next(); !cssClasses_1_1.done; cssClasses_1_1 = cssClasses_1.next()) {
                    var cssClass = cssClasses_1_1.value;
                    if (!element.classList.contains(cssClass)) {
                        return false;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (cssClasses_1_1 && !cssClasses_1_1.done && (_c = cssClasses_1.return)) _c.call(cssClasses_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
            return true;
        };
        /**
         * @return {?}
         */
        Select2.prototype.focusin = function () {
            if (this.disabled) {
                return;
            }
            this._focus(true);
        };
        /**
         * @return {?}
         */
        Select2.prototype.focusout = function () {
            if (this.selectionElement && !this.selectionElement.classList.contains('select2-focused')) {
                this._focus(false);
                this._onTouched();
            }
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype.moveUp = function () {
            this.updateScrollFromOption(Select2Utils.getPreviousOption(this.filteredData, this.hoveringValue));
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype.moveDown = function () {
            this.updateScrollFromOption(Select2Utils.getNextOption(this.filteredData, this.hoveringValue));
        };
        /**
         * @private
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.updateScrollFromOption = function (option) {
            if (option) {
                this.hoveringValue = option.value;
                /** @type {?} */
                var domElement = this.results.find(( /**
                 * @param {?} r
                 * @return {?}
                 */function (/**
                 * @param {?} r
                 * @return {?}
                 */ r) { return r.nativeElement.innerText.trim() === option.label; }));
                if (domElement && this.resultsElement) {
                    this.resultsElement.scrollTop = 0;
                    /** @type {?} */
                    var listClientRect = this.resultsElement.getBoundingClientRect();
                    /** @type {?} */
                    var optionClientRect = domElement.nativeElement.getBoundingClientRect();
                    this.resultsElement.scrollTop = optionClientRect.top - listClientRect.top;
                }
            }
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype.selectByEnter = function () {
            if (this.hoveringValue) {
                /** @type {?} */
                var option = Select2Utils.getOptionByValue(this.data, this.hoveringValue);
                this.select(option);
            }
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.select = function (option) {
            /** @type {?} */
            var value;
            if (option !== null) {
                if (this.multiple) {
                    /** @type {?} */
                    var options = ( /** @type {?} */(this.option));
                    /** @type {?} */
                    var index = options.findIndex(( /**
                     * @param {?} op
                     * @return {?}
                     */function (/**
                     * @param {?} op
                     * @return {?}
                     */ op) { return op.value === option.value; }));
                    if (index === -1) {
                        options.push(option);
                    }
                    else {
                        options.splice(index, 1);
                    }
                    value = (( /** @type {?} */(this.option))).map(( /**
                     * @param {?} op
                     * @return {?}
                     */function (/**
                     * @param {?} op
                     * @return {?}
                     */ op) { return op.value; }));
                }
                else {
                    this.option = option;
                    if (this.isOpen) {
                        this.isOpen = false;
                        this.close.emit(this);
                        if (this.selectionElement) {
                            this.selectionElement.focus();
                        }
                    }
                    value = this.option.value;
                }
            }
            else {
                this.option = null;
            }
            if (this.multiple && this.hideSelectedItems) {
                this.updateFilteredData();
            }
            if (this._control) {
                this._onChange(value);
            }
            else {
                this._value = value;
            }
            this.update.emit({
                component: this,
                value: value,
                options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,
            });
        };
        /**
         * @param {?} e
         * @return {?}
         */
        Select2.prototype.keyDown = function (e) {
            if (this._testKey(e, ['ArrowDown', 40])) {
                this.moveDown();
                e.preventDefault();
            }
            else if (this._testKey(e, ['ArrowUp', 38])) {
                this.moveUp();
                e.preventDefault();
            }
            else if (this._testKey(e, ['Enter', 13])) {
                this.selectByEnter();
                e.preventDefault();
            }
            else if (this._testKey(e, ['Escape', 'Tab', 9, 27]) && this.isOpen) {
                this.toggleOpenAndClose();
                this._focus(false);
            }
        };
        /**
         * @param {?} e
         * @return {?}
         */
        Select2.prototype.openKey = function (e) {
            if (this._testKey(e, ['ArrowDown', 'ArrowUp', 'Enter', 40, 38, 13])) {
                this.toggleOpenAndClose();
                e.preventDefault();
            }
            else if (this._testKey(e, ['Escape', 'Tab', 9, 27])) {
                this._focus(false);
                this._onTouched();
            }
        };
        /**
         * @param {?} _index
         * @param {?} item
         * @return {?}
         */
        Select2.prototype.trackBy = function (_index, item) {
            return item.value;
        };
        /**
         * @param {?} e
         * @return {?}
         */
        Select2.prototype.searchUpdate = function (e) {
            this.searchText = (( /** @type {?} */(e.target))).value;
            this.updateFilteredData();
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.isSelected = function (option) {
            return Select2Utils.isSelected(this.option, option, this.multiple);
        };
        /**
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.isDisabled = function (option) {
            return option.disabled ? 'true' : 'false';
        };
        /**
         * @param {?} e
         * @param {?} option
         * @return {?}
         */
        Select2.prototype.removeSelection = function (e, option) {
            Select2Utils.removeSelection(this.option, option);
            if (this.multiple && this.hideSelectedItems) {
                this.updateFilteredData();
            }
            /** @type {?} */
            var value = (( /** @type {?} */(this.option))).map(( /**
             * @param {?} op
             * @return {?}
             */function (/**
             * @param {?} op
             * @return {?}
             */ op) { return op.value; }));
            if (this._control) {
                this._onChange(value);
            }
            else {
                this._value = value;
            }
            this.update.emit({
                component: this,
                value: value,
                options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,
            });
            this.removeOption.emit({
                component: this,
                value: value,
                removedOption: option,
            });
            e.preventDefault();
            e.stopPropagation();
            if (this.isOpen) {
                this._focusSearchboxOrResultsElement();
            }
        };
        /**
         * Sets the model value. Implemented as part of ControlValueAccessor.
         * @param {?} value
         * @return {?}
         */
        Select2.prototype.writeValue = function (value) {
            this._setSelectionByValue(value);
        };
        /**
         * Saves a callback function to be invoked when the select's value
         * changes from user input. Part of the ControlValueAccessor interface
         * required to integrate with Angular's core forms API.
         *
         * @param {?} fn Callback to be triggered when the value changes.
         * @return {?}
         */
        Select2.prototype.registerOnChange = function (fn) {
            this._onChange = fn;
        };
        /**
         * Saves a callback function to be invoked when the select is blurred
         * by the user. Part of the ControlValueAccessor interface required
         * to integrate with Angular's core forms API.
         *
         * @param {?} fn Callback to be triggered when the component has been touched.
         * @return {?}
         */
        Select2.prototype.registerOnTouched = function (fn) {
            this._onTouched = fn;
        };
        /**
         * Sets whether the component should be disabled.
         * Implemented as part of ControlValueAccessor.
         * @param {?} isDisabled
         * @return {?}
         */
        Select2.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        /**
         * @param {?} way
         * @return {?}
         */
        Select2.prototype.onScroll = function (way) {
            this.scroll.emit({
                component: this,
                way: way,
                search: this.innerSearchText,
            });
        };
        /**
         * @return {?}
         */
        Select2.prototype._isErrorState = function () {
            /** @type {?} */
            var isInvalid = this._control && this._control.invalid;
            /** @type {?} */
            var isTouched = this._control && this._control.touched;
            /** @type {?} */
            var isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||
                (this._parentForm && this._parentForm.submitted);
            return !!(isInvalid && (isTouched || isSubmitted));
        };
        /**
         * @private
         * @param {?} event
         * @param {?=} refs
         * @return {?}
         */
        Select2.prototype._testKey = function (event, refs) {
            if (refs === void 0) { refs = []; }
            return this._isKey(this._getKey(event), refs);
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        Select2.prototype._getKey = function (event) {
            /** @type {?} */
            var code;
            if (event.key !== undefined) {
                code = event.key;
            }
            else if (event['keyIdentifier'] !== undefined) {
                code = event['keyIdentifier'];
            }
            else if (event['keyCode'] !== undefined) {
                code = event['keyCode'];
            }
            else {
                event.preventDefault();
            }
            return code;
        };
        /**
         * @private
         * @param {?} code
         * @param {?=} refs
         * @return {?}
         */
        Select2.prototype._isKey = function (code, refs) {
            if (refs === void 0) { refs = []; }
            return refs && refs.length > 0 ? refs.indexOf(code) !== -1 : false;
        };
        /**
         * Sets the selected option based on a value. If no option can be
         * found with the designated value, the select trigger is cleared.
         * @private
         * @param {?} value
         * @return {?}
         */
        Select2.prototype._setSelectionByValue = function (value) {
            var _this = this;
            if (this.option || (value !== undefined && value !== null)) {
                /** @type {?} */
                var isArray = Array.isArray(value);
                if (this.multiple && value && !isArray) {
                    throw new Error('Non array value.');
                }
                else if (this.data) {
                    if (this.multiple) {
                        this.option = []; // if value is null, then empty option and return
                        if (isArray) {
                            // value is not null. Preselect value
                            /** @type {?} */
                            var selectedValues = Select2Utils.getOptionsByValue(this.data, value, this.multiple);
                            selectedValues.map(( /**
                             * @param {?} item
                             * @return {?}
                             */function (/**
                             * @param {?} item
                             * @return {?}
                             */ item) { return _this.select(item); }));
                        }
                    }
                    else {
                        this.select(Select2Utils.getOptionByValue(this.data, value));
                    }
                }
                else if (this._control) {
                    this._control.viewToModelUpdate(value);
                }
                this._changeDetectorRef.markForCheck();
            }
        };
        /**
         * Does some manual dirty checking on the native input `value` property.
         * @private
         * @return {?}
         */
        Select2.prototype._dirtyCheckNativeValue = function () {
            /** @type {?} */
            var newValue = this.value;
            if (this._previousNativeValue !== newValue) {
                this._previousNativeValue = newValue;
                this._stateChanges.next();
            }
        };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        Select2.prototype._coerceBooleanProperty = function (value) {
            return value != null && "" + value !== 'false';
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype._focusSearchboxOrResultsElement = function () {
            var _this = this;
            if (!this.isSearchboxHidden) {
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    if (_this.searchInput && _this.searchInput.nativeElement) {
                        _this.searchInput.nativeElement.focus();
                    }
                }));
            }
            else if (this.resultsElement) {
                this.resultsElement.focus();
            }
        };
        /**
         * @private
         * @param {?} state
         * @return {?}
         */
        Select2.prototype._focus = function (state) {
            if (!state && this.focused) {
                this.focused = state;
                this.blur.emit(this);
            }
            else if (state && !this.focused) {
                this.focused = state;
                this.focus.emit(this);
            }
        };
        /**
         * @private
         * @return {?}
         */
        Select2.prototype._isAbobeOverlay = function () {
            return this.overlay && this._overlayPosition && this.listPosition === 'auto'
                ? this._overlayPosition === 'top'
                : this.listPosition === 'above';
        };
        return Select2;
    }());
    Select2.decorators = [
        { type: core.Component, args: [{
                    selector: 'select2',
                    template: "<div class=\"select2-label\" (click)=\"toggleOpenAndClose()\">\n    <ng-content select=\"select2-label\"></ng-content>\n    <span *ngIf=\"required\" class=\"select2-required\"></span>\n</div>\n<div\n    class=\"select2 select2-container select2-container--default select2-container--focus\"\n    [class.select2-container--below]=\"!select2above\"\n    [class.select2-container--above]=\"select2above\"\n    [class.select2-container--open]=\"isOpen\"\n    [class.select2-container--disabled]=\"disabled\"\n>\n    <div\n        class=\"selection\"\n        #selection\n        #trigger=\"cdkOverlayOrigin\"\n        [attr.tabindex]=\"!this.isOpen ? tabIndex : '-1'\"\n        (click)=\"toggleOpenAndClose()\"\n        (focus)=\"focusin()\"\n        (blur)=\"focusout()\"\n        (keydown)=\"openKey($event)\"\n        cdkOverlayOrigin\n        [class.select2-focused]=\"focused\"\n    >\n        <div\n            class=\"select2-selection\"\n            [class.select2-selection--multiple]=\"multiple\"\n            [class.select2-selection--single]=\"!multiple\"\n            role=\"combobox\"\n        >\n            <span *ngIf=\"!multiple\" class=\"select2-selection__rendered\" [title]=\"select2Option?.label || ''\">\n                <span *ngIf=\"!select2Option\">&nbsp;</span>\n                <span *ngIf=\"select2Option\" [innerHTML]=\"select2Option.label\"></span>\n                <span [class.select2-selection__placeholder__option]=\"option\" class=\"select2-selection__placeholder\">{{\n                    placeholder\n                }}</span>\n            </span>\n            <span\n                (click)=\"reset($event)\"\n                *ngIf=\"!multiple && resettable && select2Option\"\n                class=\"select2-selection__reset\"\n                role=\"presentation\"\n                >\u00D7</span\n            >\n            <span *ngIf=\"!multiple\" class=\"select2-selection__arrow\" role=\"presentation\"> </span>\n            <ul *ngIf=\"multiple\" class=\"select2-selection__rendered\">\n                <span\n                    [class.select2-selection__placeholder__option]=\"select2Options?.length > 0\"\n                    class=\"select2-selection__placeholder\"\n                    >{{ placeholder }}</span\n                >\n                <li *ngFor=\"let op of option; trackBy: trackBy\" class=\"select2-selection__choice\" [title]=\"op.label\">\n                    <span\n                        (click)=\"removeSelection($event, op)\"\n                        class=\"select2-selection__choice__remove\"\n                        role=\"presentation\"\n                        >\u00D7</span\n                    >\n                    <span [innerHTML]=\"op.label\"></span>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <ng-container *ngIf=\"!overlay\">\n        <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n    </ng-container>\n\n    <div class=\"select2-subscript-wrapper\">\n        <ng-content select=\"select2-hint\"></ng-content>\n    </div>\n</div>\n\n<ng-template\n    cdkConnectedOverlay\n    cdkConnectedOverlayHasBackdrop\n    cdkConnectedOverlayBackdropClass=\"select2-overlay-backdrop\"\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"this.isOpen && overlay\"\n    [cdkConnectedOverlayMinWidth]=\"overlayWidth\"\n    [cdkConnectedOverlayHeight]=\"overlayHeight\"\n    [cdkConnectedOverlayPositions]=\"_positions\"\n    (backdropClick)=\"toggleOpenAndClose()\"\n>\n    <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n</ng-template>\n\n<ng-template #containerTemplate>\n    <div\n        class=\"select2-container select2-container--default select2-container-dropdown\"\n        [class.select2-container--open]=\"isOpen\"\n        [class.select2-overlay]=\"overlay\"\n        [class.select2-position-auto]=\"listPosition === 'auto'\"\n    >\n        <div\n            #dropdown\n            class=\"select2-dropdown\"\n            [class.select2-dropdown--below]=\"!select2above\"\n            [class.select2-dropdown--above]=\"select2above\"\n        >\n            <div class=\"select2-search select2-search--dropdown\" [class.select2-search--hide]=\"hideSearch()\">\n                <input\n                    #searchInput\n                    [id]=\"id + '-search-field'\"\n                    [value]=\"searchText\"\n                    (keydown)=\"keyDown($event)\"\n                    (keyup)=\"searchUpdate($event)\"\n                    (change)=\"prevChange($event)\"\n                    class=\"select2-search__field\"\n                    type=\"search\"\n                    role=\"textbox\"\n                    autocomplete=\"off\"\n                    autocorrect=\"off\"\n                    autocapitalize=\"off\"\n                    spellcheck=\"false\"\n                    [attr.tabindex]=\"this.isOpen ? tabIndex : '-1'\"\n                />\n            </div>\n            <div class=\"select2-results\">\n                <ul\n                    #results\n                    class=\"select2-results__options\"\n                    [style.max-height]=\"resultMaxHeight\"\n                    role=\"tree\"\n                    tabindex=\"-1\"\n                    infiniteScroll\n                    [infiniteScrollDisabled]=\"!infiniteScroll && !isOpen\"\n                    [infiniteScrollDistance]=\"infiniteScrollDistance\"\n                    [infiniteScrollThrottle]=\"infiniteScrollThrottle\"\n                    [infiniteScrollContainer]=\"results\"\n                    (scrolled)=\"onScroll('down')\"\n                    (scrolledUp)=\"onScroll('up')\"\n                    (keydown)=\"keyDown($event)\"\n                >\n                    <ng-container *ngFor=\"let groupOrOption of filteredData; index as i; trackBy: trackBy\">\n                        <li *ngIf=\"groupOrOption.options\" class=\"select2-results__option\" role=\"group\">\n                            <strong\n                                *ngIf=\"!hasTemplate(groupOrOption, 'group'); else optGroup\"\n                                [attr.class]=\"\n                                    'select2-results__group' +\n                                    (groupOrOption.classes ? ' ' + groupOrOption.classes : '')\n                                \"\n                                [innerHTML]=\"groupOrOption.label\"\n                            ></strong>\n                            <ng-template #optGroup>\n                                <ng-container\n                                    *ngTemplateOutlet=\"getTemplate(groupOrOption, 'group'); context: groupOrOption\"\n                                >\n                                </ng-container>\n                            </ng-template>\n\n                            <ul class=\"select2-results__options select2-results__options--nested\">\n                                <li\n                                    *ngFor=\"let option of groupOrOption.options; index as j; trackBy: trackBy\"\n                                    #result\n                                    [id]=\"option.id || id + '-option-' + i + '-' + j\"\n                                    [class]=\"getOptionStyle(option)\"\n                                    role=\"treeitem\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isDisabled(option)\"\n                                    (mouseenter)=\"mouseenter(option)\"\n                                    (click)=\"click(option)\"\n                                >\n                                    <div\n                                        *ngIf=\"!hasTemplate(option, 'option'); else liGroup\"\n                                        class=\"select2-label-content\"\n                                        [innerHTML]=\"option.label\"\n                                    ></div>\n                                    <ng-template #liGroup>\n                                        <ng-container\n                                            *ngTemplateOutlet=\"getTemplate(option, 'option'); context: option\"\n                                        >\n                                        </ng-container>\n                                    </ng-template>\n                                </li>\n                            </ul>\n                        </li>\n                        <li\n                            *ngIf=\"!groupOrOption.options\"\n                            #result\n                            [id]=\"groupOrOption.id || id + '-option-' + i\"\n                            [class]=\"getOptionStyle(groupOrOption)\"\n                            role=\"treeitem\"\n                            [attr.aria-selected]=\"isSelected(groupOrOption)\"\n                            [attr.aria-disabled]=\"isDisabled(groupOrOption)\"\n                            (mouseenter)=\"mouseenter(groupOrOption)\"\n                            (click)=\"click(groupOrOption)\"\n                        >\n                            <div\n                                *ngIf=\"!hasTemplate(groupOrOption, 'option'); else li\"\n                                [innerHTML]=\"groupOrOption.label\"\n                                class=\"select2-label-content\"\n                            ></div>\n                            <ng-template #li>\n                                <ng-container\n                                    *ngTemplateOutlet=\"getTemplate(groupOrOption, 'option'); context: groupOrOption\"\n                                >\n                                </ng-container>\n                            </ng-template>\n                        </li>\n                    </ng-container>\n                    <li\n                        class=\"select2-no-result select2-results__option\"\n                        *ngIf=\"!filteredData?.length && noResultMessage\"\n                        [innerHTML]=\"noResultMessage\"\n                    ></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</ng-template>\n",
                    styles: [".select2-label{color:#000;color:var(--select2-label-text-color,#000)}.select2-container{box-sizing:border-box;display:inline-block;margin:0;position:relative;vertical-align:middle;width:100%}.select2-container .select2-container-dropdown{opacity:0;position:absolute;width:0}.select2-container .select2-selection--single{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;box-sizing:border-box;cursor:pointer;display:block;height:28px;user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{display:block;flex:1 1 auto;overflow:hidden;padding:0 0 0 8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-selection--single .select2-selection__clear{position:relative}.select2-container .select2-selection--multiple{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;box-sizing:border-box;cursor:pointer;display:block;min-height:32px;user-select:none}.select2-container .select2-selection--multiple .select2-selection__rendered{display:inline-block;overflow:hidden;padding-left:8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-search--inline{float:left}.select2-container .select2-search--inline .select2-search__field{border:none;box-sizing:border-box;font-size:100%;margin-top:5px;padding:0}.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-dropdown{background:#fff;background:var(--select2-dropdown-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-dropdown-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);box-sizing:border-box;display:block;height:0;overflow:hidden;position:absolute;width:100%;z-index:1051}.select2-dropdown .select2-label-content{display:contents}.select2-results{display:block}.select2-results__options{list-style:none;margin:0;padding:0}.select2-results__option{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;color:#000;color:var(--select2-option-text-color,#000);padding:6px;user-select:none}.select2-results__option[aria-selected]{cursor:pointer}.select2-container.select2-container-dropdown.select2-container--open{opacity:1;width:100%}.select2-container--open .select2-dropdown{height:auto;overflow:auto}.select2-container--open .select2-dropdown--above{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0;bottom:27px;display:flex;flex-direction:column-reverse}.select2-container--open .select2-dropdown--below{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-search--dropdown{display:block;padding:4px}.select2-search--dropdown .select2-search__field{box-sizing:border-box;padding:4px;width:100%}.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-search--dropdown.select2-search--hide{display:none}.select2-close-mask{background:#fff;border:0;display:block;filter:alpha(opacity=0);height:auto;left:0;margin:0;min-height:100%;min-width:100%;opacity:0;padding:0;position:fixed;top:0;width:auto;z-index:99}.select2-required:before{color:red;color:var(--select2-required-color,red);content:\"*\"}.select2-hidden-accessible{border:0!important;clip:rect(0 0 0 0)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important}.select2-container--default .select2-selection--single{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);display:flex}.select2-container--default .select2-selection--single .select2-selection__rendered{color:#444;color:var(--select2-selection-text-color,#444);line-height:28px}.select2-container--default .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:700}.select2-container--default .select2-selection--single .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999)}.select2-container--default .select2-selection--single .select2-selection__placeholder span{overflow:hidden;text-overflow:ellipsis;text-overflow:var(--select2-placeholder-overflow,ellipsis);white-space:nowrap}.select2-container--default .select2-selection--single .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--single .select2-selection__arrow,.select2-container--default .select2-selection--single .select2-selection__reset{align-items:center;display:flex;justify-content:center;width:20px}.select2-container--default .select2-selection--single .select2-selection__arrow:before{border-bottom:0 solid var(--select2-arrow-color,#888);border-color:#888 transparent;border-left:4px solid transparent;border-right:4px solid transparent;border-top:5px solid var(--select2-arrow-color,#888);content:\" \";height:0;width:0}.select2-container--default .select2-selection--single .select2-selection__reset{color:#999;color:var(--select2-reset-color,#999)}.select2-container--default.select2-container--disabled .select2-selection--single{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__clear{display:none}.select2-container--default.select2-container--open .select2-selection--single .select2-selection__arrow:before{border-bottom-color:var(--select2-arrow-color,#888);border-color:transparent transparent #888;border-right-color:transparent;border-top-color:transparent;border-width:0 4px 5px}.select2-container--default .select2-selection--multiple{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);cursor:text}.select2-container--default .select2-selection--multiple .select2-selection__rendered{box-sizing:border-box;flex:1 1 auto;list-style:none;margin:0;padding:0 5px;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__rendered li{list-style:none}.select2-container--default .select2-selection--multiple .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999);display:block;float:left;margin-top:5px;overflow:hidden;text-overflow:ellipsis;text-overflow:var(--select2-placeholder-overflow,ellipsis);white-space:nowrap;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--multiple .select2-selection__clear{cursor:pointer;float:right;font-weight:700;margin-right:10px;margin-top:5px}.select2-container--default .select2-selection--multiple .select2-selection__choice{background:#e4e4e4;background:var(--select2-selection-choice-background,#e4e4e4);border:1px solid #aaa;border:1px solid var(--select2-selection-choice-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);color:#000;color:var(--select2-selection-choice-text-color,#000);cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:#999;color:var(--select2-selection-choice-close-color,#999);cursor:pointer;display:inline-block;font-weight:700;margin-right:2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#333;color:var(--select2-selection-choice-hover-close-color,#333)}.select2-container--default.select2-container--focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single{border:1px solid #000;border:1px solid var(--select2-selection-focus-border-color,#000);outline:none}.select2-container--default.select2-container--disabled .select2-selection--multiple{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection__choice__remove{display:none}.select2-container--default.select2-container--open.select2-container--above .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--above .select2-selection--single{border-top-left-radius:0;border-top-right-radius:0}.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--below .select2-selection--single{border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--default .select2-search--dropdown .select2-search__field{background:#fff;background:1px solid var(--select2-search-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-search-border-color,#aaa);border-radius:0;border-radius:var(--select2-search-border-radius,0)}.select2-container--default .select2-search--inline .select2-search__field{-webkit-appearance:textfield;background:transparent;border:none;box-shadow:none;outline:none}.select2-container--default .select2-results>.select2-results__options{overflow-y:auto}.select2-container--default .select2-results__option[role=group]{padding:0}.select2-container--default .select2-results__option[aria-disabled=true]{background:transparent;background:var(--select2-option-disabled-background,transparent);color:#999;color:var(--select2-option-disabled-text-color,#999)}.select2-container--default .select2-results__option[aria-selected=true]{background:#ddd;background:var(--select2-option-selected-background,#ddd);color:#000;color:var(--select2-option-selected-text-color,#000)}.select2-container--default .select2-results__option .select2-results__option{padding-left:1em}.select2-container--default .select2-results__option .select2-results__option .select2-results__group{padding-left:0}.select2-container--default .select2-results__option .select2-results__option .select2-results__option{margin-left:-1em;padding-left:2em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-2em;padding-left:3em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-3em;padding-left:4em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-4em;padding-left:5em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-5em;padding-left:6em}.select2-container--default .select2-results__option--highlighted[aria-selected]{background:#5897fb;background:var(--select2-option-highlighted-background,#5897fb);color:#fff;color:var(--select2-option-highlighted-text-color,#fff)}.select2-container--default .select2-results__option--hide{display:none}.select2-container--default .select2-results__group{background:transparent;background:var(--select2-option-group-background,transparent);color:grey;color:var(--select2-option-group-text-color,grey);cursor:default;display:block;padding:6px}.select2-no-result{color:#888;color:var(--select2-no-result-color,#888);font-style:italic;font-style:var(--select2-font-style-color,italic)}:host.nostyle .select2-dropdown{border-color:transparent}:host.nostyle .select2-container--default .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default .select2-focused .select2-selection--single,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single,:host.nostyle .select2-selection--multiple,:host.nostyle .select2-selection--single{background:transparent;border-color:transparent}:host.material{display:inline-block;width:300px}:host.material>.select2-container{padding-bottom:1.29688em;vertical-align:inherit}:host.material>.select2-container .selection{align-items:baseline;border-top:.84375em solid transparent;display:inline-flex;height:auto;padding:.4375em 0;width:100%}:host.material .select2-container--default .select2-selection--multiple,:host.material .select2-container--default .select2-selection--single{border:0;border-radius:0;box-sizing:border-box;height:24px;width:100%}:host.material .select2-container--default .select2-selection--multiple:before,:host.material .select2-container--default .select2-selection--single:before{background:#ddd;background:var(--select2-material-underline,#ddd);bottom:1.65em;content:\" \";display:block;height:1px;position:absolute;width:100%}:host.material .select2-container--default .select2-selection--multiple:after,:host.material .select2-container--default .select2-selection--single:after{background:#5a419e;background:var(--select2-material-underline-active,#5a419e);bottom:1.63em;content:\" \";display:block;height:2px;left:50%;position:absolute;transition:none;width:0}:host.material .select2-container--default .select2-selection--multiple .select2-selection__rendered,:host.material .select2-container--default .select2-selection--single .select2-selection__rendered{line-height:inherit;padding-left:1px}:host.material .select2-container--default .select2-selection--multiple .select2-selection__placeholder,:host.material .select2-container--default .select2-selection--single .select2-selection__placeholder{color:rgba(0,0,0,.38);color:var(--select2-material-placeholder-color,rgba(0,0,0,.38));display:block;left:0;position:absolute;top:20px;transform-origin:0 21px;transition:transform .3s}:host.material .select2-container--default .select2-container--open{bottom:1.6em;left:0}:host.material .select2-container--default .select2-selection__placeholder__option{transform:translateY(-1.5em) scale(.75) perspective(100px) translateZ(.001px);width:133.33333%}:host.material .select2-container--default .select2-selection__arrow{top:20px}:host.material .select2-container--default.select2-container--open .select2-selection--multiple:after,:host.material .select2-container--default.select2-container--open .select2-selection--single:after,:host.material .select2-container--default .select2-focused .select2-selection--multiple:after,:host.material .select2-container--default .select2-focused .select2-selection--single:after{left:0;transition:width .3s cubic-bezier(.12,1,.77,1),left .3s cubic-bezier(.12,1,.77,1);width:100%}:host.material .select2-container--default .select2-dropdown{border:0;border-radius:0;box-shadow:0 5px 5px rgba(0,0,0,.5)}:host.material .select2-container--default .select2-results__option--highlighted[aria-selected],:host.material .select2-container--default .select2-results__option[aria-selected=true]{background:rgba(0,0,0,.04);background:var(--select2-material-option-selected-background,rgba(0,0,0,.04));color:#000;color:var(--select2-material-option-highlighted-text-color,#000)}:host.material .select2-container--default .select2-results__option[aria-selected=true]{color:#ff5722;color:var(--select2-material-option-selected-text-color,#ff5722)}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple,:host.material .select2-container--default.select2-container--disabled .select2-selection--single{background:transparent}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple:before,:host.material .select2-container--default.select2-container--disabled .select2-selection--single:before{background:linear-gradient(90deg,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background:var(--select2-material-underline-disabled,linear-gradient(90deg,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0));background-position:0 bottom;background-repeat:repeat-x;background-size:4px 1px}:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple:after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple:before,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single:after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single:before{background:red;background:var(--select2-material-underline-invalid,red)}:host.material:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.material:not(.select2-container--open) .select2-focused .select2-selection--single{border:0}:host.material .select2-subscript-wrapper{color:#888;color:var(--select2-hint-text-color,#888);font-size:75%;position:absolute;top:calc(100% - 1.72917em)}::ng-deep .select2-overlay-backdrop{background:rgba(0,0,0,.32);background:var(--select2-overlay-backdrop,transparent)}::ng-deep .cdk-overlay-container .select2-container .select2-dropdown.select2-dropdown--above{bottom:28px}::ng-deep .cdk-overlay-container .select2-container--open.select2-position-auto .select2-dropdown{margin-bottom:28px}::ng-deep .cdk-overlay-container .select2-container--open.select2-position-auto .select2-dropdown.select2-dropdown--above{bottom:0;margin-bottom:0;margin-top:28px}@supports (-moz-appearance:none){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:26px}}@supports (-ms-scroll-limit:0){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:25px}}"]
                }] }
    ];
    /** @nocollapse */
    Select2.ctorParameters = function () { return [
        { type: scrolling.ViewportRuler },
        { type: core.ChangeDetectorRef },
        { type: forms.NgForm, decorators: [{ type: core.Optional }] },
        { type: forms.FormGroupDirective, decorators: [{ type: core.Optional }] },
        { type: forms.NgControl, decorators: [{ type: core.Self }, { type: core.Optional }] },
        { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] }
    ]; };
    Select2.propDecorators = {
        data: [{ type: core.Input }],
        minCharForSearch: [{ type: core.Input }],
        displaySearchStatus: [{ type: core.Input }],
        placeholder: [{ type: core.Input }],
        customSearchEnabled: [{ type: core.Input }],
        limitSelection: [{ type: core.Input }],
        listPosition: [{ type: core.Input }],
        multiple: [{ type: core.Input }],
        overlay: [{ type: core.Input }],
        styleMode: [{ type: core.Input }],
        noResultMessage: [{ type: core.Input }],
        infiniteScrollDistance: [{ type: core.Input }],
        infiniteScrollThrottle: [{ type: core.Input }],
        infiniteScroll: [{ type: core.Input }],
        editPattern: [{ type: core.Input }],
        templates: [{ type: core.Input }],
        resultMaxHeight: [{ type: core.Input }],
        update: [{ type: core.Output }],
        open: [{ type: core.Output }],
        close: [{ type: core.Output }],
        focus: [{ type: core.Output }],
        blur: [{ type: core.Output }],
        search: [{ type: core.Output }],
        scroll: [{ type: core.Output }],
        removeOption: [{ type: core.Output }],
        minCountForSearch: [{ type: core.Input }],
        id: [{ type: core.Input }, { type: core.HostBinding, args: ['id',] }],
        required: [{ type: core.Input }],
        disabled: [{ type: core.Input }],
        hideSelectedItems: [{ type: core.Input }],
        readonly: [{ type: core.Input }],
        value: [{ type: core.Input }],
        tabIndex: [{ type: core.Input }],
        resettable: [{ type: core.Input }],
        ariaInvalid: [{ type: core.HostBinding, args: ['attr.aria-invalid',] }],
        classMaterial: [{ type: core.HostBinding, args: ['class.material',] }],
        classNostyle: [{ type: core.HostBinding, args: ['class.nostyle',] }],
        select2above: [{ type: core.HostBinding, args: ['class.select2-above',] }],
        cdkConnectedOverlay: [{ type: core.ViewChild, args: [overlay.CdkConnectedOverlay,] }],
        selection: [{ type: core.ViewChild, args: ['selection', { static: true },] }],
        resultContainer: [{ type: core.ViewChild, args: ['results',] }],
        results: [{ type: core.ViewChildren, args: ['result',] }],
        searchInput: [{ type: core.ViewChild, args: ['searchInput',] }],
        dropdown: [{ type: core.ViewChild, args: ['dropdown',] }]
    };
    if (false) {
        /**
         * data of options & optiongrps
         * @type {?}
         */
        Select2.prototype.data;
        /** @type {?} */
        Select2.prototype.minCharForSearch;
        /** @type {?} */
        Select2.prototype.displaySearchStatus;
        /** @type {?} */
        Select2.prototype.placeholder;
        /** @type {?} */
        Select2.prototype.customSearchEnabled;
        /** @type {?} */
        Select2.prototype.limitSelection;
        /** @type {?} */
        Select2.prototype.listPosition;
        /**
         * use the material style
         * @type {?}
         */
        Select2.prototype.styleMode;
        /**
         * message when no result
         * @type {?}
         */
        Select2.prototype.noResultMessage;
        /**
         * infinite scroll distance
         * @type {?}
         */
        Select2.prototype.infiniteScrollDistance;
        /**
         * infinite scroll distance
         * @type {?}
         */
        Select2.prototype.infiniteScrollThrottle;
        /**
         * use it for change the pattern of the filter search
         * @type {?}
         */
        Select2.prototype.editPattern;
        /**
         * template for formating
         * @type {?}
         */
        Select2.prototype.templates;
        /**
         * the max height of the results container when opening the select
         * @type {?}
         */
        Select2.prototype.resultMaxHeight;
        /** @type {?} */
        Select2.prototype.update;
        /** @type {?} */
        Select2.prototype.open;
        /** @type {?} */
        Select2.prototype.close;
        /** @type {?} */
        Select2.prototype.focus;
        /** @type {?} */
        Select2.prototype.blur;
        /** @type {?} */
        Select2.prototype.search;
        /** @type {?} */
        Select2.prototype.scroll;
        /** @type {?} */
        Select2.prototype.removeOption;
        /** @type {?} */
        Select2.prototype.option;
        /** @type {?} */
        Select2.prototype.isOpen;
        /** @type {?} */
        Select2.prototype.searchStyle;
        /**
         * Whether the element is focused or not.
         * @type {?}
         */
        Select2.prototype.focused;
        /** @type {?} */
        Select2.prototype.filteredData;
        /** @type {?} */
        Select2.prototype.overlayWidth;
        /** @type {?} */
        Select2.prototype.overlayHeight;
        /** @type {?} */
        Select2.prototype._triggerRect;
        /** @type {?} */
        Select2.prototype._dropdownRect;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._minCountForSearch;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.cdkConnectedOverlay;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.selection;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.resultContainer;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.results;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.searchInput;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.dropdown;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.hoveringValue;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.innerSearchText;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.isSearchboxHidden;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype.selectionElement;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._stateChanges;
        /**
         * Tab index for the element.
         * @type {?}
         * @private
         */
        Select2.prototype._tabIndex;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._disabled;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._required;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._readonly;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._multiple;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._overlay;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._resettable;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._hideSelectedItems;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._clickDetection;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._clickDetectionFc;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._id;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._uid;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._value;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._previousNativeValue;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._infiniteScroll;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._overlayPosition;
        /**
         * View -> model callback called when select has been touched
         * @type {?}
         * @private
         */
        Select2.prototype._onTouched;
        /**
         * View -> model callback called when value changes
         * @type {?}
         * @private
         */
        Select2.prototype._onChange;
        /**
         * @type {?}
         * @protected
         */
        Select2.prototype._viewportRuler;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._changeDetectorRef;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._parentForm;
        /**
         * @type {?}
         * @private
         */
        Select2.prototype._parentFormGroup;
        /** @type {?} */
        Select2.prototype._control;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/select2-hint.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Select2Hint = /** @class */ (function () {
        function Select2Hint() {
        }
        return Select2Hint;
    }());
    Select2Hint.decorators = [
        { type: core.Directive, args: [{ selector: 'select2-hint' },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/select2-label.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Select2Label = /** @class */ (function () {
        function Select2Label() {
        }
        return Select2Label;
    }());
    Select2Label.decorators = [
        { type: core.Directive, args: [{ selector: 'select2-label' },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/select2.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Select2Module = /** @class */ (function () {
        function Select2Module() {
        }
        return Select2Module;
    }());
    Select2Module.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, forms.FormsModule, overlay.OverlayModule, forms.ReactiveFormsModule, ngxInfiniteScroll.InfiniteScrollModule],
                    declarations: [Select2Hint, Select2Label, Select2],
                    exports: [forms.FormsModule, forms.ReactiveFormsModule, Select2Hint, Select2Label, Select2],
                },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: ng-select2-component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.Select2 = Select2;
    exports.Select2Hint = Select2Hint;
    exports.Select2Label = Select2Label;
    exports.Select2Module = Select2Module;
    exports.Select2Utils = Select2Utils;
    exports.defaultMinCountForSearch = defaultMinCountForSearch;
    exports.protectRegexp = protectRegexp;
    exports.timeout = timeout;
    exports.unicodePatterns = unicodePatterns;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-select2-component.umd.js.map
